1."Стратегия" - выделяет семейство алгоритмов и инкапсулирует их. Что позволяет расширять алгоритм, 
безопасно менять его реализации и динамически исполнять их за счет делегирования поведения другому объекту.
Реализуется принцип выделения переменных аспектов поведения и их инкапсуляции.

2. "Наблюдатель" - демонстрирует тип отношений ОДИН КО МНОГИМ. Измененения в состоянии наблюдаемого объекта активируют поведение наблюдателей. Наблюдаемый ничего не знает о наблюдателях, а они о нем.
Реализует принцип слабой связи взаимодействующих объектов.

3. "Декоратор" - динамически расширяет(дополняет, декорирует) поведение объекта за счет субклассирования. Код декорируемых объектов не меняется. Декоратор имеет один тип с компонентом, чтобы иметь возможность субклассирования.
Реализует принцип открытости к расширению/закрытости к изменениям.

4. "Фабричный метод" - инкапсулирует создание объектов в отдельном методе, исполнение которого делегирует субклассу. 
Реализует принцип - код должен зависеть от астракций, а не от конкретных реализаций.   
